{
  "version": 3,
  "sources": ["src/app/components/search/search.component.ts", "src/app/components/search/search.component.html", "src/app/components/search/services/search.routes.ts"],
  "sourcesContent": ["import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, BehaviorSubject, of } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, tap, catchError } from 'rxjs/operators';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Post } from '../../models/models';\r\nimport { MATERIAL } from '../../material/material.module';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, MATERIAL],\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  query = new FormControl('');\r\n  loading = false;\r\n  error: string | null = null;\r\n\r\n  private allPosts: Post[] = [];\r\n  filtered$ = new BehaviorSubject<Post[]>([]);\r\n  private sub = new Subscription();\r\n  private lastQuery = '';\r\n\r\n  editing = new Map<number, boolean>();\r\n  editForms = new Map<number, FormGroup>();\r\n\r\n  private api = inject(ApiService);\r\n  private fb = inject(FormBuilder);\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    const loadSub = this.api.getPosts().pipe(\r\n      tap(() => { this.error = null; }),\r\n      catchError(err => {\r\n        this.error = 'Failed to load posts';\r\n        console.error(err);\r\n        return of([] as Post[]);\r\n      })\r\n    ).subscribe(posts => {\r\n      this.allPosts = Array.isArray(posts) ? posts : [];\r\n      this.filtered$.next([]);\r\n      this.loading = false;\r\n    });\r\n    this.sub.add(loadSub);\r\n\r\n    const qSub = this.query.valueChanges.pipe(\r\n      debounceTime(250),\r\n      distinctUntilChanged(),\r\n      tap(() => { this.error = null; }),\r\n      switchMap(q => {\r\n        const text = (q || '').toString().trim().toLowerCase();\r\n        this.lastQuery = text;\r\n        if (!text) return of([] as Post[]);\r\n        const result = this.allPosts.filter(p =>\r\n          (p.title || '').toLowerCase().includes(text) ||\r\n          (p.body || '').toLowerCase().includes(text)\r\n        );\r\n        return of(result);\r\n      }),\r\n      catchError(err => {\r\n        console.error(err);\r\n        return of([] as Post[]);\r\n      })\r\n    ).subscribe(results => this.filtered$.next(results));\r\n    this.sub.add(qSub);\r\n  }\r\n\r\n  clear(): void {\r\n    this.query.setValue('');\r\n  }\r\n\r\n  startEdit(post: Post): void {\r\n    this.editing.set(post.id, true);\r\n    const fg = this.fb.group({\r\n      title: [post.title || '', Validators.required],\r\n      body: [post.body || '']\r\n    });\r\n    this.editForms.set(post.id, fg);\r\n  }\r\n\r\n  cancelEdit(id: number): void {\r\n    this.editing.set(id, false);\r\n    this.editForms.delete(id);\r\n  }\r\n\r\n  saveEdit(post: Post): void {\r\n    const fg = this.editForms.get(post.id);\r\n    if (!fg || fg.invalid) return;\r\n    const { title, body } = fg.value;\r\n\r\n    const idx = this.allPosts.findIndex(p => p.id === post.id);\r\n    if (idx > -1) this.allPosts[idx] = { ...this.allPosts[idx], title, body };\r\n\r\n    const current = this.filtered$.getValue().map(p => p.id === post.id ? { ...p, title, body } : p);\r\n    this.filtered$.next(current);\r\n\r\n    if (typeof this.api.updatePost === 'function') {\r\n      this.api.updatePost(post.id, { title, body }).pipe(\r\n        catchError((err: unknown) => {\r\n          console.error('Update failed', err);\r\n          this.error = 'Failed to save changes';\r\n          return of(null);\r\n        })\r\n      ).subscribe();\r\n    }\r\n\r\n    this.cancelEdit(post.id);\r\n  }\r\n\r\n  highlight(text?: string): string {\r\n    if (!text) return '';\r\n    const q = this.lastQuery;\r\n    if (!q) return this.escapeHtml(text);\r\n    const escapeForRegExp = (s: string): string => {\r\n      const specials = new Set(['.', '*', '+', '?', '^', '$', '{', '}', '(', ')', '|', '[', ']', '\\\\', '/']);\r\n      let out = '';\r\n      for (const ch of s) out += specials.has(ch) ? '\\\\' + ch : ch;\r\n      return out;\r\n    };\r\n    const esc = escapeForRegExp(q);\r\n    const re = new RegExp(esc, 'ig');\r\n    return this.escapeHtml(text).replace(re, match => `<span class=\"hl\">${match}</span>`);\r\n  }\r\n\r\n  private escapeHtml(s: string): string {\r\n    return s\r\n      .split('&').join('&amp;')\r\n      .split('<').join('&lt;')\r\n      .split('>').join('&gt;')\r\n      .split('\"').join('&quot;')\r\n      .split(\"'\").join('&#39;');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n    this.filtered$.complete();\r\n    this.editForms.clear();\r\n    this.editing.clear();\r\n  }\r\n}\r\n", "<div class=\"posts-wrapper search-page\">\r\n  <div class=\"search-bar\">\r\n    <mat-icon class=\"search-icon\">search</mat-icon>\r\n    <input matInput [formControl]=\"query\" placeholder=\"Search title or text\" />\r\n    <button mat-icon-button *ngIf=\"query.value\" (click)=\"clear()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div\r\n    class=\"meta\"\r\n    *ngIf=\"(query.value || '').toString().trim().length > 0 || loading || error\"\r\n  >\r\n    <div *ngIf=\"loading\" class=\"loading\">\r\n      <mat-progress-spinner\r\n        diameter=\"20\"\r\n        mode=\"indeterminate\"\r\n      ></mat-progress-spinner>\r\n      <span>Loading...</span>\r\n    </div>\r\n    <div *ngIf=\"error\" class=\"error\">{{ error }}</div>\r\n    <div *ngIf=\"!loading && !error\" class=\"count\">\r\n      {{ (filtered$ | async)?.length || 0 }} results\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"results\" *ngIf=\"(query.value || '').toString().trim().length > 0\">\r\n    <ng-container *ngIf=\"filtered$ | async as list\">\r\n      <div *ngFor=\"let post of list\" class=\"posts-card\">\r\n        <button\r\n          class=\"edit-icon\"\r\n          *ngIf=\"!editing.get(post.id)\"\r\n          (click)=\"startEdit(post)\"\r\n        >\r\n          âœŽ\r\n        </button>\r\n\r\n        <div *ngIf=\"editing.get(post.id); else viewMode\">\r\n          <form\r\n            [formGroup]=\"editForms.get(post.id)!\"\r\n            class=\"edit-form\"\r\n            (ngSubmit)=\"saveEdit(post)\"\r\n          >\r\n            <input formControlName=\"title\" placeholder=\"Titolo\" />\r\n            <textarea formControlName=\"body\" placeholder=\"Testo\"></textarea>\r\n\r\n            <div class=\"form-actions\">\r\n              <button\r\n                class=\"submit-btn\"\r\n                type=\"button\"\r\n                (click)=\"saveEdit(post)\"\r\n                [disabled]=\"editForms.get(post.id)?.invalid\"\r\n              >\r\n                Save\r\n              </button>\r\n              <button\r\n                class=\"cancel-btn\"\r\n                type=\"button\"\r\n                (click)=\"cancelEdit(post.id)\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <ng-template #viewMode>\r\n          <h2 class=\"post-title\" [innerHTML]=\"highlight(post.title)\"></h2>\r\n          <p class=\"post-body\" [innerHTML]=\"highlight(post.body)\"></p>\r\n\r\n          <img\r\n            *ngIf=\"post.image_url\"\r\n            [src]=\"post.image_url\"\r\n            alt=\"post image\"\r\n            class=\"post-image\"\r\n          />\r\n\r\n          <div class=\"post-actions\">\r\n            <span class=\"likes\">Likes: {{ post.likes || 0 }}</span>\r\n          </div>\r\n\r\n          <div class=\"comments\" *ngIf=\"post.comments?.length\">\r\n            <div *ngFor=\"let c of post.comments\" class=\"comment\">\r\n              <div class=\"reply-comment\">{{ c.body }}</div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n\r\n      <div *ngIf=\"!list.length && !loading && !error\" class=\"empty\">\r\n        No posts found\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n", "import { Routes } from '@angular/router';\r\nimport { SearchComponent } from '../search.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: SearchComponent }\r\n];\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clear", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "error", "\u0275\u0275textInterpolate1", "tmp_2_0", "\u0275\u0275pipeBind1", "filtered$", "length", "\u0275\u0275template", "SearchComponent_div_6_div_1_Template", "SearchComponent_div_6_div_2_Template", "SearchComponent_div_6_div_3_Template", "\u0275\u0275property", "loading", "_r3", "post_r4", "$implicit", "startEdit", "_r5", "saveEdit", "cancelEdit", "id", "editForms", "get", "tmp_8_0", "invalid", "image_url", "\u0275\u0275sanitizeUrl", "c_r6", "body", "SearchComponent_div_7_ng_container_1_div_1_ng_template_3_div_6_div_1_Template", "comments", "SearchComponent_div_7_ng_container_1_div_1_ng_template_3_img_2_Template", "SearchComponent_div_7_ng_container_1_div_1_ng_template_3_div_6_Template", "highlight", "title", "\u0275\u0275sanitizeHtml", "likes", "SearchComponent_div_7_ng_container_1_div_1_button_1_Template", "SearchComponent_div_7_ng_container_1_div_1_div_2_Template", "SearchComponent_div_7_ng_container_1_div_1_ng_template_3_Template", "\u0275\u0275templateRefExtractor", "editing", "viewMode_r7", "\u0275\u0275elementContainerStart", "SearchComponent_div_7_ng_container_1_div_1_Template", "SearchComponent_div_7_ng_container_1_div_2_Template", "list_r8", "SearchComponent_div_7_ng_container_1_Template", "SearchComponent", "query", "FormControl", "allPosts", "BehaviorSubject", "sub", "Subscription", "lastQuery", "Map", "api", "inject", "ApiService", "fb", "FormBuilder", "ngOnInit", "loadSub", "getPosts", "pipe", "tap", "catchError", "err", "console", "of", "subscribe", "posts", "Array", "isArray", "next", "add", "qSub", "valueChanges", "debounceTime", "distinctUntilChanged", "switchMap", "q", "text", "toString", "trim", "toLowerCase", "result", "filter", "p", "includes", "results", "setValue", "post", "set", "fg", "group", "Validators", "required", "delete", "value", "idx", "findIndex", "__spreadProps", "__spreadValues", "current", "getValue", "map", "updatePost", "escapeHtml", "esc", "s", "specials", "Set", "out", "ch", "has", "re", "RegExp", "replace", "match", "split", "join", "ngOnDestroy", "unsubscribe", "complete", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "SearchComponent_button_5_Template", "SearchComponent_div_6_Template", "SearchComponent_div_7_Template", "CommonModule", "NgForOf", "NgIf", "AsyncPipe", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormControlDirective", "FormGroupDirective", "FormControlName", "MatToolbarModule", "MatButtonModule", "MatIconButton", "MatSidenavModule", "MatIconModule", "MatIcon", "MatInputModule", "MatInput", "MatProgressSpinnerModule", "MatProgressSpinner", "RouterModule", "styles", "routes", "path", "component", "SearchComponent"]
}
